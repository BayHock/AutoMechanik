@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
			<a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
		</li>
		<li class="nav-item">
			<form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
			</form>
		</li>
	}
	else //Обратить внимание на этот кусок говнакода!!!!
	{
		var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
		var currentAction = ViewContext.RouteData.Values["action"]?.ToString();
		var currentRoute = ViewContext.RouteData.Values["page"]?.ToString();

		string isOnRegisterPage = "/Account/Register";
		string isOnLoginPage = "/Account/Login";
		string isOnRegisterAutoServicePage = "/Account/AutoService/RegisterAutoService";
		string isOnLoginAutoServicePage = "/Account/AutoService/LoginAutoService";
		bool isOnChoiceRolePage = (currentController == "Home" && currentAction == "ChoiceRolePage");

		if (!(isOnChoiceRolePage) &&
		(currentRoute != isOnRegisterPage) &&
		(currentRoute != isOnLoginPage) &&
		(currentRoute != isOnRegisterAutoServicePage) &&
		(currentRoute != isOnLoginAutoServicePage)
		)
		{
			<li class="nav-item">
				<a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="ChoiceRolePage">Начать пользоваться веб-сервисом</a>
			</li>
		}
	}
</ul>
